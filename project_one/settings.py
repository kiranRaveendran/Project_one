"""
Django settings for project_one project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=mljvmf%b7xx+p)&4)7cv$lov$0wj)bc0^!(7#7z756xjl@5o$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app_one',
    'app_two',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project_one.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project_one.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'notech_demo',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# In a Django project, the STATIC_URL and STATICFILES_DIRS settings are used to
# configure how static files are handled.

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
# STATIC_URL: This setting specifies the base URL to serve static files from. When you
# reference static files in your templates or code, Django uses this URL as the prefix.
# For example, if STATIC_URL is set to '/static/', then static files will be served from
# URLs like /static/css/style.css or /static/js/script.js.

# STATICFILES_DIRS: This setting is a list of directories where Django will look for
# static files. In the example you provided, it's set to [os.path.join(BASE_DIR, 'static')],
# which means that Django will look for static files in a directory named 'static' within
# your project's base directory (BASE_DIR). This is useful for storing project-specific static
# files that are not part of any app.

# 1. When Django receives a request for a static file (e.g., a CSS file or JavaScript file),
#     it looks for that file in the directories specified in STATICFILES_DIRS.
# 2. If the requested file is found in one of these directories, Django serves it at the URL
#     pecified by STATIC_URL. For example, if the requested file is style.css and STATIC_URL
#     is '/static/', Django serves the file at /static/style.css.

MEDIA_URL = '/images/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images')


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# 1. MEDIA_URL: This setting specifies the base URL for serving media files. When
# you upload files using Django's file upload functionality, the uploaded files
# will be served from URLs prefixed with this value. For example, if MEDIA_URL is set
# to '/images/', then media files will be served from URLs like /images/my_image.jpg.

# 2.MEDIA_ROOT: This setting specifies the directory where uploaded media files are stored
# on the filesystem. When you upload files through Django's file upload functionality,
# they are stored in this directory. In the example you provided, MEDIA_ROOT is set
# to os.path.join(BASE_DIR, 'static/images'), which means that uploaded media files will be
# stored in a directory named 'images' within the 'static' directory of your project's base
# directory (BASE_DIR).

# 3.STATIC_ROOT: This setting specifies the directory where static files will be collected for
# deployment. When you run Django's collectstatic management command, Django copies all static
# files from various locations in your project to this directory. This is useful for serving static
# files efficiently with a web server like Nginx or Apache in production. In the example you provided,
# STATIC_ROOT is set to os.path.join(BASE_DIR, 'staticfiles'), which means that collected static
# files will be stored in a directory named 'staticfiles' within your project's base directory (BASE_DIR).


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
